{"version":3,"file":"index.js","mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;;;;;;;;;;ACda;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,eAAe;AAC9B,eAAe,aAAa;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,GAAG;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAe;;;;;;;;;;;AChEF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,gCAAgC,mBAAO,CAAC,+BAAS;AACjD;AACA;AACA;AACA;AACA,eAAe,0BAA0B;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,GAAG;AAClB,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,eAAe,QAAQ;AACvB,eAAe,eAAe;AAC9B,iBAAiB,QAAQ;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC3FF;AACb;AACA,6CAA6C;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,iCAAiC,mBAAO,CAAC,iCAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,KAAK;AAChB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,WAAW,QAAQ;AACnB,WAAW,eAAe;AAC1B,aAAa,QAAQ;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;AACf;;;;;;;UCpDA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://EventEmitter/webpack/universalModuleDefinition","webpack://EventEmitter/./src/Event.ts","webpack://EventEmitter/./src/Events.ts","webpack://EventEmitter/./src/index.ts","webpack://EventEmitter/webpack/bootstrap","webpack://EventEmitter/webpack/before-startup","webpack://EventEmitter/webpack/startup","webpack://EventEmitter/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\t//Easy Event Emitter\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\t//Easy Event Emitter\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\t//Easy Event Emitter\n\telse if(typeof exports === 'object')\n\t\texports[\"EventEmitter\"] = factory();\n\t//Easy Event Emitter\n\telse\n\t\troot[\"EventEmitter\"] = factory();\n})(self, () => {\nreturn ","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/** Event class */\nclass Event {\n    /**\n     * Constructor new event\n     * @param {string} event Event name\n     * @param {EventCallback} callback Callback function\n     * @param {EventObject} events Static events parent\n     */\n    constructor(event, callback, events) {\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callback\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.events = events;\n        this._name = event;\n        this.callback = callback;\n        if (!this.events[event]) {\n            this.events[event] = [];\n        }\n        this.events[event].push(this);\n    }\n    /**\n     * Event name\n     * @returns {string}\n     */\n    get name() {\n        return this._name;\n    }\n    /**\n     * Emit current listener\n     * @param {T} data Data for event\n     * @returns {void}\n     */\n    emit(data) {\n        this.callback(data);\n    }\n    /**\n     * Remove current listener\n     * @returns {void}\n     */\n    remove() {\n        if (!this.events[this.name])\n            return;\n        this.events[this.name] = this.events[this.name].filter((event) => event !== this);\n        this._name = '';\n        this.callback = () => { };\n    }\n}\nexports.default = Event;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Event_1 = __importDefault(require(\"./Event\"));\n/** Events class */\nclass Events {\n    /**\n     * Event constructor\n     * @param {string|boolean|undefined} group Events group name\n     */\n    constructor(group) {\n        Object.defineProperty(this, \"listeners\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"events\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.listeners = [];\n        this.events = {};\n        this.emit = this.emit.bind(this);\n        this.addListener = this.addListener.bind(this);\n        this.removeAllListeners = this.removeAllListeners.bind(this);\n        if (typeof group === 'boolean' && group === true) {\n            this.events = Events.events[Events.globalName];\n        }\n        else {\n            if (typeof group === 'string' && group !== Events.globalName) {\n                if (!Events.events[group]) {\n                    Events.events[group] = {};\n                }\n                this.events = Events.events[group];\n            }\n        }\n    }\n    /**\n     * Event emitter\n     * @param {string} event Event name\n     * @param {T} data Any data\n     * @returns {void}\n     */\n    emit(event, data) {\n        if (!this.events[event]) {\n            return;\n        }\n        this.events[event].forEach((event) => {\n            event.emit(data);\n        });\n    }\n    /**\n     * Add listener for event\n     * @param {string} event Event name\n     * @param {EventCallback} callback Callback function\n     * @returns {Event} {remove: Function, emit: Function}\n     */\n    addListener(event, callback) {\n        const newListener = new Event_1.default(event, callback, this.events);\n        this.listeners.push(newListener);\n        return newListener;\n    }\n    /**\n     * Remove all listeners in current event instanse\n     * @returns {void}\n     */\n    removeAllListeners() {\n        this.listeners.reverse().forEach((listener) => {\n            listener.remove();\n        });\n    }\n}\nObject.defineProperty(Events, \"globalName\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: '__global'\n});\nObject.defineProperty(Events, \"events\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: {\n        [Events.globalName]: {}\n    }\n});\nexports.default = Events;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar _a;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst Events_1 = __importDefault(require(\"./Events\"));\n/** Easy Event Emitter */\nclass EventEmitter extends Events_1.default {\n}\n_a = EventEmitter;\nObject.defineProperty(EventEmitter, \"instance\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: new EventEmitter(true)\n});\n/**\n * Event emitter\n * @param {string} event Event name\n * @param {any} data Any data\n * @returns {void}\n */\nObject.defineProperty(EventEmitter, \"emit\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: _a.instance.emit\n});\n/**\n * Add listener for event\n * @param {string} event Event name\n * @param {EventCallback} callback Callback function\n * @returns {Event} {remove: Function, emit: Function}\n */\nObject.defineProperty(EventEmitter, \"addListener\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: _a.instance.addListener\n});\n/**\n * Remove all listeners in current event instanse\n * @returns {void}\n */\nObject.defineProperty(EventEmitter, \"removeAllListeners\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: _a.instance.removeAllListeners\n});\nexports.default = EventEmitter;\n;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}